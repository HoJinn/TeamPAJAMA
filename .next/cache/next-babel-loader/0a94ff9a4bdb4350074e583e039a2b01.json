{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { atom, selector } from 'recoil';\n/** README!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n *  select: 접미사에 Selector가 붙은 것을 사용할 것.\r\n *  update: 접미사에 AsOnlySetter이 붙은 것을 사용할 것.\r\n *  README!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n */\n\nconst LAYOUT_INIT = {\n  width: 0,\n  height: 0\n};\nexport let LayoutGrade;\n\n(function (LayoutGrade) {\n  LayoutGrade[\"XL\"] = \"xl\";\n  LayoutGrade[\"LG\"] = \"lg\";\n  LayoutGrade[\"MD\"] = \"md\";\n  LayoutGrade[\"SM\"] = \"sm\";\n  LayoutGrade[\"XS\"] = \"xs\";\n  LayoutGrade[\"UN\"] = \"un\";\n})(LayoutGrade || (LayoutGrade = {}));\n\nexport const SIZE_INFO = {\n  XS: {\n    grade: LayoutGrade.XS,\n    max: 360\n  },\n  SM: {\n    grade: LayoutGrade.SM,\n    max: 640\n  },\n  MD: {\n    grade: LayoutGrade.MD,\n    max: 960\n  },\n  LG: {\n    grade: LayoutGrade.LG,\n    max: 1280\n  },\n  XL: {\n    grade: LayoutGrade.XL\n  }\n};\nexport const windowLayoutAsOnlySetter = atom({\n  key: 'windowLayoutAsOnlySetter',\n  default: _objectSpread(_objectSpread({}, LAYOUT_INIT), {}, {\n    scrollX: 0,\n    scrollY: 0\n  })\n});\nexport const windowLayoutSelector = selector({\n  key: 'windowLayoutSelector',\n  get: ({\n    get\n  }) => {\n    const windowLayout = get(windowLayoutAsOnlySetter);\n    const {\n      width\n    } = windowLayout;\n    return _objectSpread(_objectSpread({}, windowLayout), {}, {\n      grade: getGrade(width)\n    });\n  }\n});\nexport const headerLayoutAsOnlySetter = atom({\n  key: 'headerLayoutAsOnlySetter',\n  default: _objectSpread(_objectSpread({}, LAYOUT_INIT), {}, {\n    position: 'relation',\n    x: 0,\n    y: 0\n  })\n});\nexport const headerLayoutSelector = selector({\n  key: 'headerLayoutSelector',\n  get: ({\n    get\n  }) => {\n    const headerLayout = get(headerLayoutAsOnlySetter);\n    const {\n      width\n    } = headerLayout;\n    return _objectSpread(_objectSpread({}, headerLayout), {}, {\n      grade: getGrade(width)\n    });\n  }\n});\nexport const navLayoutAsOnlySetter = atom({\n  key: 'navLayoutAsOnlySetter',\n  default: _objectSpread(_objectSpread({}, LAYOUT_INIT), {}, {\n    position: 'relation',\n    x: 0,\n    y: 0\n  })\n});\nexport const navLayoutSelector = selector({\n  key: 'navLayoutSelector',\n  get: ({\n    get\n  }) => {\n    const navLayout = get(navLayoutAsOnlySetter);\n    const {\n      width\n    } = navLayout;\n    return _objectSpread(_objectSpread({}, navLayout), {}, {\n      grade: getGrade(width)\n    });\n  }\n});\nexport const contentLayoutAsOnlySetter = atom({\n  key: 'contentLayoutAsOnlySetter',\n  default: _objectSpread(_objectSpread({}, LAYOUT_INIT), {}, {\n    position: 'relation',\n    x: 0,\n    y: 0\n  })\n});\nexport const contentLayoutSelector = selector({\n  key: 'contentLayoutSelector',\n  get: ({\n    get\n  }) => {\n    const contentLayout = get(contentLayoutAsOnlySetter);\n    const {\n      width\n    } = contentLayout;\n    return _objectSpread(_objectSpread({}, contentLayout), {}, {\n      grade: getGrade(width)\n    });\n  }\n});\nexport const footerLayoutAsOnlySetter = atom({\n  key: 'footerLayoutAsOnlySetter',\n  default: _objectSpread(_objectSpread({}, LAYOUT_INIT), {}, {\n    position: 'relation',\n    x: 0,\n    y: 0\n  })\n});\nexport const footerLayoutSelector = selector({\n  key: 'footerLayoutSelector',\n  get: ({\n    get\n  }) => {\n    const footerLayout = get(footerLayoutAsOnlySetter);\n    const {\n      width\n    } = footerLayout;\n    return _objectSpread(_objectSpread({}, footerLayout), {}, {\n      grade: getGrade(width)\n    });\n  }\n}); //\n// ACTIONS\n//\n\nexport const getBasicLayout = node => {\n  if (!node) return _objectSpread(_objectSpread({}, LAYOUT_INIT), {}, {\n    position: 'relation',\n    x: 0,\n    y: 0\n  });\n  const {\n    offsetWidth,\n    offsetHeight\n  } = node;\n  const {\n    position\n  } = node.style;\n  let x, y; // if(position === 'fixed' && node.style){\n  //   const {left, top} = node.style;\n  //   x = Number(left.replace(OTHER_THEN_NUMBER_AND_RELATION, EMPTY));\n  //   y = Number(top.replace(OTHER_THEN_NUMBER_AND_RELATION, EMPTY));\n  // }else{\n\n  const {\n    x: rectX,\n    y: rectY\n  } = node.getBoundingClientRect();\n  x = rectX;\n  y = rectY;\n  return {\n    width: offsetWidth,\n    height: offsetHeight,\n    position: position === 'fixed' ? position : 'relation',\n    x,\n    y\n  };\n};\nexport const getWindowLayout = window => {\n  if (!window) return _objectSpread(_objectSpread({}, LAYOUT_INIT), {}, {\n    scrollX: 0,\n    scrollY: 0\n  });\n  const {\n    scrollX,\n    scrollY\n  } = window;\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    scrollY,\n    scrollX\n  };\n};\nexport const getGrade = width => {\n  if (!width || width < 1) return LayoutGrade.UN;else if (width <= SIZE_INFO.XS.max) return LayoutGrade.XS;else if (width <= SIZE_INFO.SM.max) return LayoutGrade.SM;else if (width <= SIZE_INFO.MD.max) return LayoutGrade.MD;else if (width <= SIZE_INFO.LG.max) return LayoutGrade.LG;else return LayoutGrade.XL;\n};","map":{"version":3,"sources":["C:/pro/myReact/TeamPAJAMA/recoilStates/layout.ts"],"names":["atom","selector","LAYOUT_INIT","width","height","LayoutGrade","SIZE_INFO","XS","grade","max","SM","MD","LG","XL","windowLayoutAsOnlySetter","key","default","scrollX","scrollY","windowLayoutSelector","get","windowLayout","getGrade","headerLayoutAsOnlySetter","position","x","y","headerLayoutSelector","headerLayout","navLayoutAsOnlySetter","navLayoutSelector","navLayout","contentLayoutAsOnlySetter","contentLayoutSelector","contentLayout","footerLayoutAsOnlySetter","footerLayoutSelector","footerLayout","getBasicLayout","node","offsetWidth","offsetHeight","style","rectX","rectY","getBoundingClientRect","getWindowLayout","window","innerWidth","innerHeight","UN"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AAGA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,CADW;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAApB;AAIA,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAGZ,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,EAAE,EAAC;AAACC,IAAAA,KAAK,EAAEH,WAAW,CAACE,EAApB;AAAwBE,IAAAA,GAAG,EAAE;AAA7B,GADoB;AAEvBC,EAAAA,EAAE,EAAC;AAACF,IAAAA,KAAK,EAAEH,WAAW,CAACK,EAApB;AAAwBD,IAAAA,GAAG,EAAE;AAA7B,GAFoB;AAGvBE,EAAAA,EAAE,EAAC;AAACH,IAAAA,KAAK,EAAEH,WAAW,CAACM,EAApB;AAAwBF,IAAAA,GAAG,EAAE;AAA7B,GAHoB;AAIvBG,EAAAA,EAAE,EAAC;AAACJ,IAAAA,KAAK,EAAEH,WAAW,CAACO,EAApB;AAAwBH,IAAAA,GAAG,EAAE;AAA7B,GAJoB;AAKvBI,EAAAA,EAAE,EAAC;AAACL,IAAAA,KAAK,EAAEH,WAAW,CAACQ;AAApB;AALoB,CAAlB;AA6BP,OAAO,MAAMC,wBAAwB,GAAGd,IAAI,CAAe;AACzDe,EAAAA,GAAG,EAAE,0BADoD;AAEzDC,EAAAA,OAAO,kCACFd,WADE;AAELe,IAAAA,OAAO,EAAE,CAFJ;AAGLC,IAAAA,OAAO,EAAE;AAHJ;AAFkD,CAAf,CAArC;AAQP,OAAO,MAAMC,oBAAoB,GAAGlB,QAAQ,CAAwB;AAClEc,EAAAA,GAAG,EAAE,sBAD6D;AAElEK,EAAAA,GAAG,EAAE,CAAC;AAACA,IAAAA;AAAD,GAAD,KAAW;AACd,UAAMC,YAAY,GAAGD,GAAG,CAACN,wBAAD,CAAxB;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAYkB,YAAlB;AACA,2CACKA,YADL;AAEEb,MAAAA,KAAK,EAAEc,QAAQ,CAACnB,KAAD;AAFjB;AAID;AATiE,CAAxB,CAArC;AAaP,OAAO,MAAMoB,wBAAwB,GAAGvB,IAAI,CAAc;AACxDe,EAAAA,GAAG,EAAE,0BADmD;AAExDC,EAAAA,OAAO,kCACFd,WADE;AAELsB,IAAAA,QAAQ,EAAE,UAFL;AAGLC,IAAAA,CAAC,EAAE,CAHE;AAILC,IAAAA,CAAC,EAAE;AAJE;AAFiD,CAAd,CAArC;AAUP,OAAO,MAAMC,oBAAoB,GAAG1B,QAAQ,CAAuB;AACjEc,EAAAA,GAAG,EAAE,sBAD4D;AAEjEK,EAAAA,GAAG,EAAE,CAAC;AAACA,IAAAA;AAAD,GAAD,KAAU;AACb,UAAMQ,YAAY,GAAGR,GAAG,CAACG,wBAAD,CAAxB;AACA,UAAM;AAACpB,MAAAA;AAAD,QAAUyB,YAAhB;AACA,2CACKA,YADL;AAEEpB,MAAAA,KAAK,EAAEc,QAAQ,CAACnB,KAAD;AAFjB;AAID;AATgE,CAAvB,CAArC;AAYP,OAAO,MAAM0B,qBAAqB,GAAG7B,IAAI,CAAc;AACrDe,EAAAA,GAAG,EAAE,uBADgD;AAErDC,EAAAA,OAAO,kCACFd,WADE;AAELsB,IAAAA,QAAQ,EAAE,UAFL;AAGLC,IAAAA,CAAC,EAAE,CAHE;AAILC,IAAAA,CAAC,EAAE;AAJE;AAF8C,CAAd,CAAlC;AASP,OAAO,MAAMI,iBAAiB,GAAG7B,QAAQ,CAAuB;AAC9Dc,EAAAA,GAAG,EAAE,mBADyD;AAE9DK,EAAAA,GAAG,EAAE,CAAC;AAACA,IAAAA;AAAD,GAAD,KAAU;AACb,UAAMW,SAAS,GAAGX,GAAG,CAACS,qBAAD,CAArB;AACA,UAAM;AAAC1B,MAAAA;AAAD,QAAU4B,SAAhB;AACA,2CACKA,SADL;AAEEvB,MAAAA,KAAK,EAAEc,QAAQ,CAACnB,KAAD;AAFjB;AAID;AAT6D,CAAvB,CAAlC;AAYP,OAAO,MAAM6B,yBAAyB,GAAGhC,IAAI,CAAc;AACzDe,EAAAA,GAAG,EAAE,2BADoD;AAEzDC,EAAAA,OAAO,kCACFd,WADE;AAELsB,IAAAA,QAAQ,EAAE,UAFL;AAGLC,IAAAA,CAAC,EAAE,CAHE;AAILC,IAAAA,CAAC,EAAE;AAJE;AAFkD,CAAd,CAAtC;AASP,OAAO,MAAMO,qBAAqB,GAAGhC,QAAQ,CAAuB;AAClEc,EAAAA,GAAG,EAAE,uBAD6D;AAElEK,EAAAA,GAAG,EAAE,CAAC;AAACA,IAAAA;AAAD,GAAD,KAAU;AACb,UAAMc,aAAa,GAAGd,GAAG,CAACY,yBAAD,CAAzB;AACA,UAAM;AAAC7B,MAAAA;AAAD,QAAU+B,aAAhB;AACA,2CACKA,aADL;AAEE1B,MAAAA,KAAK,EAAEc,QAAQ,CAACnB,KAAD;AAFjB;AAID;AATiE,CAAvB,CAAtC;AAYP,OAAO,MAAMgC,wBAAwB,GAAGnC,IAAI,CAAc;AACxDe,EAAAA,GAAG,EAAE,0BADmD;AAExDC,EAAAA,OAAO,kCACFd,WADE;AAELsB,IAAAA,QAAQ,EAAE,UAFL;AAGLC,IAAAA,CAAC,EAAE,CAHE;AAILC,IAAAA,CAAC,EAAE;AAJE;AAFiD,CAAd,CAArC;AAcP,OAAO,MAAMU,oBAAoB,GAAGnC,QAAQ,CAAuB;AACjEc,EAAAA,GAAG,EAAE,sBAD4D;AAEjEK,EAAAA,GAAG,EAAE,CAAC;AAACA,IAAAA;AAAD,GAAD,KAAU;AACb,UAAMiB,YAAY,GAAGjB,GAAG,CAACe,wBAAD,CAAxB;AACA,UAAM;AAAChC,MAAAA;AAAD,QAAUkC,YAAhB;AACA,2CACKA,YADL;AAEE7B,MAAAA,KAAK,EAAEc,QAAQ,CAACnB,KAAD;AAFjB;AAID;AATgE,CAAvB,CAArC,C,CAYP;AACA;AACA;;AAEA,OAAO,MAAMmC,cAAc,GAAIC,IAAD,IAAyC;AAErE,MAAG,CAACA,IAAJ,EACE,uCACKrC,WADL;AAEEsB,IAAAA,QAAQ,EAAE,UAFZ;AAGEC,IAAAA,CAAC,EAAE,CAHL;AAGQC,IAAAA,CAAC,EAAE;AAHX;AAMF,QAAM;AAACc,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA8BF,IAApC;AACA,QAAM;AAACf,IAAAA;AAAD,MAAae,IAAI,CAACG,KAAxB;AACA,MAAIjB,CAAJ,EAAOC,CAAP,CAXqE,CAYrE;AACA;AACA;AACA;AACA;;AACA,QAAM;AAACD,IAAAA,CAAC,EAAEkB,KAAJ;AAAWjB,IAAAA,CAAC,EAAEkB;AAAd,MAAuBL,IAAI,CAACM,qBAAL,EAA7B;AACApB,EAAAA,CAAC,GAAGkB,KAAJ;AACAjB,EAAAA,CAAC,GAAGkB,KAAJ;AAEA,SAAO;AACLzC,IAAAA,KAAK,EAAEqC,WADF;AAELpC,IAAAA,MAAM,EAAEqC,YAFH;AAGLjB,IAAAA,QAAQ,EAAEA,QAAQ,KAAK,OAAb,GAAuBA,QAAvB,GAAkC,UAHvC;AAILC,IAAAA,CAJK;AAIFC,IAAAA;AAJE,GAAP;AAMD,CA3BM;AA4BP,OAAO,MAAMoB,eAAe,GAAIC,MAAD,IAAkC;AAC/D,MAAG,CAACA,MAAJ,EACE,uCACK7C,WADL;AAEEe,IAAAA,OAAO,EAAE,CAFX;AAGEC,IAAAA,OAAO,EAAE;AAHX;AAMF,QAAM;AAACD,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqB6B,MAA3B;AACA,SAAO;AACL5C,IAAAA,KAAK,EAAE4C,MAAM,CAACC,UADT;AAEL5C,IAAAA,MAAM,EAAE2C,MAAM,CAACE,WAFV;AAGL/B,IAAAA,OAHK;AAGID,IAAAA;AAHJ,GAAP;AAKD,CAdM;AAeP,OAAO,MAAMK,QAAQ,GAAInB,KAAD,IAAgC;AACtD,MAAG,CAACA,KAAD,IAAUA,KAAK,GAAG,CAArB,EACE,OAAOE,WAAW,CAAC6C,EAAnB,CADF,KAEK,IAAG/C,KAAK,IAAIG,SAAS,CAACC,EAAV,CAAaE,GAAzB,EACH,OAAOJ,WAAW,CAACE,EAAnB,CADG,KAEA,IAAGJ,KAAK,IAAIG,SAAS,CAACI,EAAV,CAAaD,GAAzB,EACH,OAAOJ,WAAW,CAACK,EAAnB,CADG,KAEA,IAAGP,KAAK,IAAIG,SAAS,CAACK,EAAV,CAAaF,GAAzB,EACH,OAAOJ,WAAW,CAACM,EAAnB,CADG,KAEA,IAAGR,KAAK,IAAIG,SAAS,CAACM,EAAV,CAAaH,GAAzB,EACH,OAAOJ,WAAW,CAACO,EAAnB,CADG,KAGH,OAAOP,WAAW,CAACQ,EAAnB;AACH,CAbM","sourcesContent":["import { atom, selector } from 'recoil';\r\n\r\n\r\n/** README!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n *  select: 접미사에 Selector가 붙은 것을 사용할 것.\r\n *  update: 접미사에 AsOnlySetter이 붙은 것을 사용할 것.\r\n *  README!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n */\r\n\r\n\r\nconst LAYOUT_INIT = {\r\n  width: 0,\r\n  height: 0\r\n}\r\nexport enum LayoutGrade {\r\n  XL='xl', LG='lg', MD='md', SM='sm', XS='xs', UN= 'un'\r\n}\r\nexport const SIZE_INFO = {\r\n  XS:{grade: LayoutGrade.XS, max: 360 },\r\n  SM:{grade: LayoutGrade.SM, max: 640 },\r\n  MD:{grade: LayoutGrade.MD, max: 960 },\r\n  LG:{grade: LayoutGrade.LG, max: 1280 },\r\n  XL:{grade: LayoutGrade.XL }\r\n}\r\nexport interface WindowLayout {\r\n  width: number;\r\n  height: number;\r\n  // grade: LayoutGrade,\r\n  scrollY: number;\r\n  scrollX: number;\r\n}\r\nexport interface WindowLayoutWithGrade extends WindowLayout{\r\n  grade: LayoutGrade\r\n}\r\nexport interface BasicLayout {\r\n  position: 'fixed' | 'relation';\r\n  width: number;\r\n  height: number;\r\n  x: number;\r\n  y: number;\r\n}\r\nexport interface BasicLayoutWithGrade extends BasicLayout{\r\n  grade: LayoutGrade\r\n}\r\n\r\n\r\nexport const windowLayoutAsOnlySetter = atom<WindowLayout>({\r\n  key: 'windowLayoutAsOnlySetter',\r\n  default: {\r\n    ...LAYOUT_INIT,\r\n    scrollX: 0,\r\n    scrollY: 0\r\n  },\r\n})\r\nexport const windowLayoutSelector = selector<WindowLayoutWithGrade>({\r\n  key: 'windowLayoutSelector',\r\n  get: ({get}) => {\r\n    const windowLayout = get(windowLayoutAsOnlySetter);\r\n    const { width } = windowLayout;\r\n    return {\r\n      ...windowLayout,\r\n      grade: getGrade(width)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nexport const headerLayoutAsOnlySetter = atom<BasicLayout>({\r\n  key: 'headerLayoutAsOnlySetter',\r\n  default: {\r\n    ...LAYOUT_INIT,\r\n    position: 'relation',\r\n    x: 0,\r\n    y: 0\r\n  }\r\n})\r\n\r\nexport const headerLayoutSelector = selector<BasicLayoutWithGrade>({\r\n  key: 'headerLayoutSelector',\r\n  get: ({get}) =>{\r\n    const headerLayout = get(headerLayoutAsOnlySetter);\r\n    const {width} = headerLayout;\r\n    return {\r\n      ...headerLayout,\r\n      grade: getGrade(width)\r\n    }\r\n  }\r\n})\r\n\r\nexport const navLayoutAsOnlySetter = atom<BasicLayout>({\r\n  key: 'navLayoutAsOnlySetter',\r\n  default: {\r\n    ...LAYOUT_INIT,\r\n    position: 'relation',\r\n    x: 0,\r\n    y: 0\r\n  }\r\n})\r\nexport const navLayoutSelector = selector<BasicLayoutWithGrade>({\r\n  key: 'navLayoutSelector',\r\n  get: ({get}) =>{\r\n    const navLayout = get(navLayoutAsOnlySetter);\r\n    const {width} = navLayout;\r\n    return {\r\n      ...navLayout,\r\n      grade: getGrade(width)\r\n    }\r\n  }\r\n})\r\n\r\nexport const contentLayoutAsOnlySetter = atom<BasicLayout>({\r\n  key: 'contentLayoutAsOnlySetter',\r\n  default: {\r\n    ...LAYOUT_INIT,\r\n    position: 'relation',\r\n    x: 0,\r\n    y: 0\r\n  }\r\n})\r\nexport const contentLayoutSelector = selector<BasicLayoutWithGrade>({\r\n  key: 'contentLayoutSelector',\r\n  get: ({get}) =>{\r\n    const contentLayout = get(contentLayoutAsOnlySetter);\r\n    const {width} = contentLayout;\r\n    return {\r\n      ...contentLayout,\r\n      grade: getGrade(width)\r\n    }\r\n  }\r\n})\r\n\r\nexport const footerLayoutAsOnlySetter = atom<BasicLayout>({\r\n  key: 'footerLayoutAsOnlySetter',\r\n  default: {\r\n    ...LAYOUT_INIT,\r\n    position: 'relation',\r\n    x: 0,\r\n    y: 0\r\n  }\r\n})\r\n\r\n\r\nexport type BackColor= 'white'|'black'|'transparent'|'yellow';\r\n\r\n\r\nexport const footerLayoutSelector = selector<BasicLayoutWithGrade>({\r\n  key: 'footerLayoutSelector',\r\n  get: ({get}) =>{\r\n    const footerLayout = get(footerLayoutAsOnlySetter);\r\n    const {width} = footerLayout;\r\n    return {\r\n      ...footerLayout,\r\n      grade: getGrade(width)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\n// ACTIONS\r\n//\r\n\r\nexport const getBasicLayout = (node?: HTMLElement|null):BasicLayout => {\r\n\r\n  if(!node)\r\n    return {\r\n      ...LAYOUT_INIT,\r\n      position: 'relation',\r\n      x: 0, y: 0\r\n    }\r\n\r\n  const {offsetWidth, offsetHeight} = node;\r\n  const {position} = node.style;\r\n  let x, y;\r\n  // if(position === 'fixed' && node.style){\r\n  //   const {left, top} = node.style;\r\n  //   x = Number(left.replace(OTHER_THEN_NUMBER_AND_RELATION, EMPTY));\r\n  //   y = Number(top.replace(OTHER_THEN_NUMBER_AND_RELATION, EMPTY));\r\n  // }else{\r\n  const {x: rectX, y: rectY} = node.getBoundingClientRect();\r\n  x = rectX;\r\n  y = rectY;\r\n  \r\n  return {\r\n    width: offsetWidth, \r\n    height: offsetHeight,\r\n    position: position === 'fixed' ? position : 'relation',\r\n    x, y\r\n  }\r\n}\r\nexport const getWindowLayout = (window?: Window):WindowLayout => {\r\n  if(!window) \r\n    return {\r\n      ...LAYOUT_INIT,\r\n      scrollX: 0,\r\n      scrollY: 0\r\n    }\r\n\r\n  const {scrollX, scrollY} = window;\r\n  return {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    scrollY, scrollX\r\n  }\r\n}\r\nexport const getGrade = (width?: number):LayoutGrade => {\r\n  if(!width || width < 1)\r\n    return LayoutGrade.UN\r\n  else if(width <= SIZE_INFO.XS.max)\r\n    return LayoutGrade.XS\r\n  else if(width <= SIZE_INFO.SM.max)\r\n    return LayoutGrade.SM\r\n  else if(width <= SIZE_INFO.MD.max)\r\n    return LayoutGrade.MD\r\n  else if(width <= SIZE_INFO.LG.max)\r\n    return LayoutGrade.LG\r\n  else\r\n    return LayoutGrade.XL\r\n}"]},"metadata":{},"sourceType":"module"}