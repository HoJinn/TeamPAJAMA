{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { destroyCookie, parseCookies, setCookie } from \"nookies\";\nimport { pick } from \"./util\";\nexport const pushAsCurrentPage = (urlOption, router) => {\n  // const router_ = router||useRouter();\n  const {\n    query,\n    pathname\n  } = router;\n  router.push(urlOption, {\n    pathname,\n    query\n  });\n};\nexport const saveCurrentPage = router => {\n  const {\n    pathname,\n    query\n  } = router;\n\n  const {\n    dialogType\n  } = query,\n        query_ = _objectWithoutProperties(query, [\"dialogType\"]);\n\n  setCookie(null, `${process.env.NEXT_PUBLIC_BOOKMARK_PAGE}`, JSON.stringify({\n    pathname,\n    query: query_\n  }), {\n    path: '/'\n  });\n};\nexport const getBookmarkPage = () => {\n  const cookies = parseCookies();\n\n  try {\n    const bookmarkPage = pick(JSON.parse(cookies[`${process.env.NEXT_PUBLIC_BOOKMARK_PAGE}`]));\n    return bookmarkPage;\n  } catch (_) {\n    return undefined;\n  }\n};\nexport const removeBookmarpage = () => destroyCookie(null, `${process.env.NEXT_PUBLIC_BOOKMARK_PAGE}`);","map":{"version":3,"sources":["C:/pro/myReact/TeamPAJAMA/src/routerUtil.ts"],"names":["destroyCookie","parseCookies","setCookie","pick","pushAsCurrentPage","urlOption","router","query","pathname","push","saveCurrentPage","dialogType","query_","process","env","NEXT_PUBLIC_BOOKMARK_PAGE","JSON","stringify","path","getBookmarkPage","cookies","bookmarkPage","parse","_","undefined","removeBookmarpage"],"mappings":";;;;AACA,SAASA,aAAT,EAAwBC,YAAxB,EAAsCC,SAAtC,QAAuD,SAAvD;AAGA,SAASC,IAAT,QAAqB,QAArB;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,SAAD,EAAuBC,MAAvB,KAA8C;AAC7E;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;AACAA,EAAAA,MAAM,CAACG,IAAP,CAAYJ,SAAZ,EAAuB;AAACG,IAAAA,QAAD;AAAWD,IAAAA;AAAX,GAAvB;AACD,CAJM;AAUP,OAAO,MAAMG,eAAe,GAAIJ,MAAD,IAAwB;AACrD,QAAM;AAACE,IAAAA,QAAD;AAAWD,IAAAA;AAAX,MAAoBD,MAA1B;;AACA,QAAM;AAACK,IAAAA;AAAD,MAA0BJ,KAAhC;AAAA,QAAsBK,MAAtB,4BAAgCL,KAAhC;;AACAL,EAAAA,SAAS,CACP,IADO,EAEN,GAAEW,OAAO,CAACC,GAAR,CAAYC,yBAA0B,EAFlC,EAGPC,IAAI,CAACC,SAAL,CAAe;AAACT,IAAAA,QAAD;AAAWD,IAAAA,KAAK,EAAEK;AAAlB,GAAf,CAHO,EAIP;AAACM,IAAAA,IAAI,EAAE;AAAP,GAJO,CAAT;AAMD,CATM;AAWP,OAAO,MAAMC,eAAe,GAAG,MAAyB;AACtD,QAAMC,OAAO,GAAGnB,YAAY,EAA5B;;AACA,MAAG;AACD,UAAMoB,YAAY,GAAGlB,IAAI,CAAWa,IAAI,CAACM,KAAL,CAAWF,OAAO,CAAE,GAAEP,OAAO,CAACC,GAAR,CAAYC,yBAA0B,EAA1C,CAAlB,CAAX,CAAzB;AACA,WAAOM,YAAP;AACD,GAHD,CAGC,OAAME,CAAN,EAAQ;AACP,WAAOC,SAAP;AACD;AACF,CARM;AAUP,OAAO,MAAMC,iBAAiB,GAAG,MAC/BzB,aAAa,CAAC,IAAD,EAAQ,GAAEa,OAAO,CAACC,GAAR,CAAYC,yBAA0B,EAAhD,CADR","sourcesContent":["import { NextRouter } from \"next/router\"\r\nimport { destroyCookie, parseCookies, setCookie } from \"nookies\";\r\nimport { ParsedUrlQuery } from \"querystring\";\r\nimport { UrlObject } from \"url\";\r\nimport { pick } from \"./util\";\r\n\r\n\r\nexport const pushAsCurrentPage = (urlOption: UrlObject, router: NextRouter) => {\r\n  // const router_ = router||useRouter();\r\n  const {query, pathname} = router;\r\n  router.push(urlOption, {pathname, query});\r\n}\r\n\r\ntype SavePage = {\r\n  pathname: string,\r\n  query: ParsedUrlQuery\r\n}\r\nexport const saveCurrentPage = (router: NextRouter) => {\r\n  const {pathname, query} = router;\r\n  const {dialogType, ...query_} = query\r\n  setCookie(\r\n    null, \r\n    `${process.env.NEXT_PUBLIC_BOOKMARK_PAGE}`, \r\n    JSON.stringify({pathname, query: query_}),\r\n    {path: '/'}\r\n  );\r\n}\r\n\r\nexport const getBookmarkPage = ():SavePage|undefined => {\r\n  const cookies = parseCookies();\r\n  try{\r\n    const bookmarkPage = pick<SavePage>(JSON.parse(cookies[`${process.env.NEXT_PUBLIC_BOOKMARK_PAGE}`] ));\r\n    return bookmarkPage\r\n  }catch(_){\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const removeBookmarpage = () => \r\n  destroyCookie(null, `${process.env.NEXT_PUBLIC_BOOKMARK_PAGE}`);\r\n"]},"metadata":{},"sourceType":"module"}