{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"width\", \"aspectRatio\"];\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\"; // import TourchRipple from '@material-ui/core/ButtonBase/TouchRipple';\n\nimport clsx from \"clsx\";\nvar useAspectRatioBoxStyles = makeStyles(function (_theme) {\n  return {\n    box: {\n      overflow: 'hidden'\n    }\n  };\n});\n\nvar AspectRatioBox = function AspectRatioBox(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      width = _ref.width,\n      aspectRatio = _ref.aspectRatio,\n      boxProps = _objectWithoutProperties(_ref, _excluded);\n\n  var classes = useAspectRatioBoxStyles();\n  var boxClass = clsx(classes.box, className);\n\n  var _useState = useState({}),\n      divStyle = _useState[0],\n      setDivStyle = _useState[1];\n\n  useEffect(function () {\n    // if(!boxRef.current) return;\n    // const {offsetWidth} = boxRef.current\n    setDivStyle({\n      display: 'block',\n      paddingTop: \"\".concat(aspectRatio * 100, \"%\")\n    });\n  }, [aspectRatio, width]);\n  return __jsx(Box, _extends({}, boxProps, {\n    className: boxClass,\n    width: width,\n    position: \"relative\"\n  }), __jsx(\"div\", {\n    style: divStyle\n  }), __jsx(Box, {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  }, children));\n};\n\nexport default AspectRatioBox;","map":null,"metadata":{},"sourceType":"module"}