{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createTheme, useMediaQuery, useTheme } from '@material-ui/core';\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\nimport { pxToRem } from 'src/util';\nimport { LayoutGrade, SIZE_INFO } from 'recoilStates/layout';\nconst {\n  LG,\n  MD,\n  SM,\n  XS\n} = SIZE_INFO;\nconst breakpoints = createBreakpoints({});\nexport const defButtonProps = {\n  variant: 'contained',\n  size: 'small'\n};\nconst defaultTheme = createTheme({\n  breakpoints: {\n    values: {\n      xs: XS.max,\n      sm: SM.max,\n      md: MD.max,\n      lg: LG.max,\n      xl: 1920\n    }\n  }\n});\nexport default createTheme({\n  breakpoints: _objectSpread({}, defaultTheme.breakpoints),\n  typography: {\n    fontFamily: \"roboto\"\n  },\n  palette: {\n    primary: {\n      main: '#00B7F3',\n      contrastText: '#fff'\n    },\n    secondary: {\n      main: '#B3EAFC',\n      contrastText: \"#fff\"\n    },\n    text: {\n      primary: \"#000\",\n      secondary: \"#666\"\n    }\n  },\n  overrides: {\n    MuiFormGroup: {\n      root: {\n        '&[role=\"radiogroup\"]': {\n          display: 'block'\n        }\n      }\n    },\n    MuiButton: {\n      root: {\n        minWidth: '70px',\n        \"&:focus\": {\n          outline: \"solid black\"\n        }\n      }\n    },\n    MuiButtonBase: {\n      root: {\n        \"&:focus\": {\n          outline: \"solid black\"\n        }\n      }\n    },\n    MuiSelect: {\n      root: {\n        \"&:focus\": {\n          outline: \"solid black\"\n        }\n      }\n    },\n    MuiCheckbox: {\n      root: {\n        \"&:focus\": {\n          outline: \"solid black\"\n        }\n      }\n    },\n    MuiGrid: {\n      root: {\n        '&.spacer': {\n          flexGrow: 1\n        }\n      }\n    },\n    MuiTypography: {\n      root: {\n        textTransform: 'none',\n        '&.bold': {\n          fontWeight: 600\n        },\n        '&.regular': {\n          fontWeight: 400\n        },\n        '&.light': {\n          fontWeight: 300\n        },\n        '&.thin': {\n          fontWeight: 200\n        },\n        '&.roboto': {\n          fontFamily: 'roboto'\n        },\n        '&.times': {\n          fontFamily: 'roboto',\n          letterSpacing: '3px'\n        }\n      },\n      caption: {\n        fontSize: pxToRem(14),\n        [breakpoints.down(SM.max)]: {\n          fontSize: pxToRem(12)\n        },\n        fontFamily: 'roboto',\n        fontWeight: 500\n      },\n      body2: {\n        fontSize: pxToRem(16),\n        [breakpoints.down(SM.max)]: {\n          fontSize: pxToRem(10)\n        },\n        fontFamily: 'roboto',\n        fontWeight: 500\n      },\n      body1: {\n        fontSize: pxToRem(20),\n        [breakpoints.down(SM.max)]: {\n          fontSize: pxToRem(13)\n        },\n        fontFamily: 'roboto',\n        fontWeight: 500\n      },\n      subtitle2: {\n        fontSize: pxToRem(30),\n        [breakpoints.down(SM.max)]: {\n          fontSize: pxToRem(15)\n        },\n        fontFamily: 'roboto',\n        fontWeight: 500\n      },\n      subtitle1: {\n        fontSize: pxToRem(35),\n        [breakpoints.down(SM.max)]: {\n          fontSize: pxToRem(20)\n        },\n        fontFamily: 'roboto',\n        fontWeight: 500\n      },\n      h6: {\n        fontSize: pxToRem(70),\n        [breakpoints.down(SM.max)]: {\n          fontSize: pxToRem(30)\n        },\n        fontFamily: 'roboto',\n        fontWeight: 500\n      },\n      h5: {\n        //메인 섹션1 텍스트 사이즈\n        fontSize: pxToRem(140),\n        [breakpoints.down(SM.max)]: {\n          fontSize: pxToRem(46)\n        },\n        fontFamily: 'roboto',\n        fontWeight: 500\n      },\n      h4: {\n        //pc 메인에서만 사용\n        fontSize: pxToRem(60),\n        fontFamily: 'roboto',\n        fontWeight: 500\n      }\n    }\n  }\n});\nexport const useLayoutGrade = theme => {\n  const theme_ = theme || useTheme();\n  if (!theme_) return {\n    isDownSm: false,\n    isMd: false,\n    isUpMdAndIsDownLg: false,\n    isDownXs: false,\n    isUpLg: false\n  };\n  const isUpSm = useMediaQuery(theme_.breakpoints.up(SIZE_INFO.SM.max));\n  const isDownMd = useMediaQuery(theme_.breakpoints.down(SIZE_INFO.MD.max - 0.01));\n  const isMd = isUpSm && isDownMd;\n  const isUpMd = useMediaQuery(theme_.breakpoints.up(SIZE_INFO.MD.max));\n  const isDownLg = useMediaQuery(theme_.breakpoints.down(SIZE_INFO.LG.max));\n  const isUpMdAndIsDownLg = isUpMd && isDownLg;\n  return {\n    isDownSm: useMediaQuery(theme_.breakpoints.down(SIZE_INFO.SM.max - 0.01)),\n    isMd,\n    isUpMdAndIsDownLg,\n    isDownXs: useMediaQuery(theme_.breakpoints.down(LayoutGrade.XS)),\n    // useMediaQuery(theme_.breakpoints.up(SIZE_INFO.SM.max)) \n    // && useMediaQuery(theme_.breakpoints.up(SIZE_INFO.MD.max)),\n    isUpLg: useMediaQuery(theme_.breakpoints.up(LayoutGrade.LG))\n  };\n};","map":{"version":3,"sources":["C:/pro/myReact/TeamPAJAMA/theme/theme.ts"],"names":["createTheme","useMediaQuery","useTheme","createBreakpoints","pxToRem","LayoutGrade","SIZE_INFO","LG","MD","SM","XS","breakpoints","defButtonProps","variant","size","defaultTheme","values","xs","max","sm","md","lg","xl","typography","fontFamily","palette","primary","main","contrastText","secondary","text","overrides","MuiFormGroup","root","display","MuiButton","minWidth","outline","MuiButtonBase","MuiSelect","MuiCheckbox","MuiGrid","flexGrow","MuiTypography","textTransform","fontWeight","letterSpacing","caption","fontSize","down","body2","body1","subtitle2","subtitle1","h6","h5","h4","useLayoutGrade","theme","theme_","isDownSm","isMd","isUpMdAndIsDownLg","isDownXs","isUpLg","isUpSm","up","isDownMd","isUpMd","isDownLg"],"mappings":"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","sourcesContent":["\r\n\r\nimport { createTheme, Theme,ButtonProps, useMediaQuery, useTheme } from '@material-ui/core'\r\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints'\r\nimport {pxToRem} from 'src/util'\r\n\r\n\r\nimport {LayoutGrade, SIZE_INFO} from 'recoilStates/layout';\r\nconst {LG, MD, SM, XS} = SIZE_INFO;\r\n\r\nconst breakpoints = createBreakpoints({});\r\n\r\nexport type ComponentSize = 'none'|'sm' | 'md' | 'lg';\r\nexport type ComponentColor = 'primary' | 'secondary' | 'error' | 'warning' | 'info' | 'success';\r\nexport type LayoutType = {\r\n  size?: ComponentSize\r\n}\r\n\r\nexport const defButtonProps:ButtonProps = {\r\n  variant: 'contained',\r\n  size: 'small'\r\n}\r\n\r\nconst defaultTheme = createTheme({\r\n  breakpoints: {\r\n    values: {\r\n      xs: XS.max,\r\n      sm: SM.max,\r\n      md: MD.max,\r\n      lg: LG.max,\r\n      xl: 1920\r\n    }\r\n  }\r\n});\r\n\r\nexport default createTheme({\r\n  breakpoints:{\r\n    ...defaultTheme.breakpoints\r\n  },\r\n  typography:{\r\n    \r\n    fontFamily:\"roboto\"\r\n  },\r\n  palette: {\r\n    primary:{\r\n      main: '#00B7F3',\r\n      contrastText: '#fff'\r\n    },\r\n    secondary: {\r\n      main:'#B3EAFC',\r\n      contrastText: \"#fff\"\r\n    },\r\n    text:{\r\n      primary:\"#000\",\r\n      secondary:\"#666\"\r\n    }\r\n  },\r\n  overrides:{\r\n    MuiFormGroup: {\r\n      root: {\r\n        '&[role=\"radiogroup\"]': { display: 'block' }\r\n      }\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        minWidth: '70px',\r\n        \"&:focus\":{\r\n          outline:\"solid black\"\r\n        }\r\n      },\r\n    },\r\n    MuiButtonBase:{\r\n      root:{\r\n        \"&:focus\":{\r\n          outline:\"solid black\"\r\n        }\r\n      }\r\n    },\r\n    MuiSelect:{\r\n      root:{\r\n        \"&:focus\":{\r\n          outline:\"solid black\"\r\n        }\r\n      }\r\n     },\r\n     MuiCheckbox:{\r\n      root:{\r\n        \"&:focus\":{\r\n          outline:\"solid black\"\r\n        }\r\n      }\r\n     },\r\n    MuiGrid: {\r\n      root: {\r\n        '&.spacer': {\r\n          flexGrow: 1\r\n        }\r\n      }\r\n    },\r\n    MuiTypography:{\r\n      root:{\r\n        textTransform:'none',\r\n          '&.bold': {\r\n            fontWeight: 600\r\n          },\r\n          '&.regular': {\r\n            fontWeight: 400\r\n          },\r\n          '&.light': {\r\n            fontWeight: 300\r\n          },\r\n          '&.thin': {\r\n            fontWeight: 200\r\n          },\r\n          '&.roboto': {\r\n            fontFamily:'roboto'\r\n          },\r\n          '&.times': {\r\n            fontFamily:'roboto',\r\n            letterSpacing:'3px'\r\n          },\r\n      },\r\n      caption:{\r\n        fontSize:pxToRem(14)\r\n        ,[breakpoints.down(SM.max)]:{\r\n          fontSize:pxToRem(12)\r\n        }\r\n        ,fontFamily:'roboto'\r\n        ,fontWeight:500\r\n        \r\n      },\r\n   \r\n      body2:{\r\n        fontSize:pxToRem(16)\r\n        ,[breakpoints.down(SM.max)]:{\r\n          fontSize:pxToRem(10)\r\n        }\r\n        ,fontFamily:'roboto'\r\n        ,fontWeight:500\r\n      },\r\n         \r\n      body1:{\r\n        fontSize:pxToRem(20)\r\n        ,[breakpoints.down(SM.max)]:{\r\n          fontSize:pxToRem(13)\r\n        }\r\n        ,fontFamily:'roboto'\r\n        ,fontWeight:500 \r\n      },\r\n      subtitle2:{\r\n        fontSize:pxToRem(30)\r\n        ,[breakpoints.down(SM.max)]:{\r\n          fontSize:pxToRem(15)\r\n        }\r\n        ,fontFamily:'roboto'\r\n        ,fontWeight:500\r\n      },\r\n      subtitle1:{\r\n        fontSize:pxToRem(35)\r\n        ,[breakpoints.down(SM.max)]:{\r\n          fontSize:pxToRem(20)\r\n        }\r\n        ,fontFamily:'roboto'\r\n        ,fontWeight:500\r\n      },\r\n     \r\n      h6:{\r\n        fontSize:pxToRem(70)\r\n        ,[breakpoints.down(SM.max)]:{\r\n          fontSize:pxToRem(30)\r\n        }\r\n        ,fontFamily:'roboto'\r\n        ,fontWeight:500\r\n      },\r\n      \r\n      h5:{//메인 섹션1 텍스트 사이즈\r\n        fontSize:pxToRem(140)\r\n        ,[breakpoints.down(SM.max)]:{\r\n          fontSize:pxToRem(46)\r\n        }\r\n        ,fontFamily:'roboto'\r\n        ,fontWeight:500\r\n      },\r\n      h4:{//pc 메인에서만 사용\r\n        fontSize:pxToRem(60)\r\n        ,fontFamily:'roboto'\r\n        ,fontWeight:500\r\n      },\r\n    \r\n    },\r\n  }\r\n})\r\n\r\ntype UseLayoutGrade = {\r\n  isDownSm: boolean,\r\n  isDownXs:boolean,\r\n  isMd: boolean,\r\n  isUpMdAndIsDownLg: boolean,\r\n  isUpLg: boolean\r\n}\r\nexport const useLayoutGrade = (theme?: Theme ): UseLayoutGrade => {\r\n  const theme_ = theme || useTheme();\r\n  if(!theme_) return {isDownSm: false, isMd: false, isUpMdAndIsDownLg: false,isDownXs:false, isUpLg: false};\r\n\r\n\r\n  const isUpSm = useMediaQuery(theme_.breakpoints.up(SIZE_INFO.SM.max));\r\n  const isDownMd = useMediaQuery(theme_.breakpoints.down(SIZE_INFO.MD.max-0.01));\r\n  const isMd = isUpSm && isDownMd;\r\n\r\n  const isUpMd = useMediaQuery(theme_.breakpoints.up(SIZE_INFO.MD.max));\r\n  const isDownLg = useMediaQuery(theme_.breakpoints.down(SIZE_INFO.LG.max));\r\n  const isUpMdAndIsDownLg = isUpMd && isDownLg;\r\n\r\n  return {\r\n    isDownSm: useMediaQuery(theme_.breakpoints.down(SIZE_INFO.SM.max-0.01)),\r\n    isMd,  \r\n    isUpMdAndIsDownLg,\r\n    isDownXs: useMediaQuery(theme_.breakpoints.down(LayoutGrade.XS)),\r\n      // useMediaQuery(theme_.breakpoints.up(SIZE_INFO.SM.max)) \r\n      // && useMediaQuery(theme_.breakpoints.up(SIZE_INFO.MD.max)),\r\n    isUpLg: useMediaQuery(theme_.breakpoints.up(LayoutGrade.LG))\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}