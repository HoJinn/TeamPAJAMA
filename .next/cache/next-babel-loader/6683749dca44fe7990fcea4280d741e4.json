{"ast":null,"code":"import moment from 'moment'; // export const NUMBER = /[0-9]/g;\n\nexport var SPECIAL_CHARACTERS = /[~!@\\#$%<>^&*\\|\\\\\\?\\/]/g;\nexport var OTHER_THEN_NUMBER = /\\D/g;\nexport var OTHER_THEN_NUMBER_AND_RELATION = /[^\\d\\.\\-\\+]/g;\nexport var NUMBER_FORM = /^[\\-\\+]?\\d*(\\.\\d+)?$/;\nexport var DIMENSION_FORM = /[\\-\\+]?\\d+(\\.\\d+)?\\s*[^\\n\\s\\b]*/g;\nexport var EMAIL_FORM = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\nexport var INT_FORM = /^\\d+$/;\nexport var FLOAT_FORM = /^\\d+\\.\\d+$/;\nexport var TAG_FORM = /\\<\\/?[a-z]+[^\\<\\>\\\\]*\\/?\\>/gi;\nexport var SPACE_BAR = /\\s/g; // export const NUMBER_FORM = /^[\\-\\+]?((\\d+\\.?)|(\\.?\\d+)|(\\d+\\.\\d+))$/;\n\nexport var WITH_COMMAS = /\\B(?=(\\d{3})+(?!\\d))/g;\nexport var WITH_HYPHEN = /(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})/;\nexport var WITH_BIRTH = /(^[1-2][0-9]{3}|^0[0-9]{3})([0-9]+)?([0-9]{2})/;\nexport var WITH_GLOBAL_PHONE = /(^[0-9]{2,3}|^0[0-9]{2})|(^[0-9]{2,3}|)([0-9]+)?([0-9]{4})/;\nvar ONE_MINUTE = 60 * 1000,\n    ONE_HOUR = ONE_MINUTE * 60,\n    ONE_DAY = ONE_HOUR * 24,\n    ONE_WEEK = ONE_DAY * 7,\n    ONE_MONTH = ONE_DAY * 30,\n    ONE_YEAR = ONE_DAY * 365;\nvar COMMA = ',';\nexport var EMPTY = '';\nexport var STRING = 'string'; // const NAN = 'NaN';\n\nvar NUMBER = 'number'; // const UNDEFINED = 'undefined';\n\n/** README!!!\r\n *  문자열 관련\r\n *  OUTPUT은 반드시 기본값이 들어갈것\r\n *  (undefind 또는 null이 OUTPUT으로 나오지 않도록)\r\n */\n\n/**금액 3자리수마다 콤마 찍기\r\n * \r\n * @param target : 문자열\r\n * @param def : 기본 값\r\n */\n\nexport var numberWithCommas = function numberWithCommas(target) {\n  var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY;\n  if (!target) return def.toString();\n  return target.toString().replace(OTHER_THEN_NUMBER, EMPTY).replace(WITH_COMMAS, COMMA);\n};\nvar limitNumberOpts = {\n  def: '',\n  max: 100\n};\n/** 입력 숫자 제한\r\n * \r\n * @param target 문자열\r\n * @param {\r\n *  def : 기본 값\r\n *  min : 최소 값\r\n *  max : 최대 값 \r\n * }\r\n */\n\nexport var limitNumber = function limitNumber(target) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : limitNumberOpts,\n      _ref$def = _ref.def,\n      def = _ref$def === void 0 ? EMPTY : _ref$def,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      min = _ref.min;\n\n  if (!target || !isNumberForm(target)) return def.toString();\n  var stringNum = target.replace(OTHER_THEN_NUMBER_AND_RELATION, EMPTY);\n  if (stringNum === EMPTY) return def.toString();\n  var num = Number(stringNum);\n  if (min && min > num) return min.toString();else if (max && max < num) return max.toString();else return target;\n};\n/** 빈 문자열 구분. tag는 전부 테스트에서 제외\r\n * \r\n * @param target : 문자열\r\n */\n\nexport var isBlank = function isBlank(target) {\n  return !isUndeclared(target) && (target === EMPTY || typeof target === 'string' && target.replace(TAG_FORM, EMPTY).replace(SPACE_BAR, EMPTY) === EMPTY);\n}; // export const isString = (target: any): target is string => {\n//   return typeof target === STRING;\n// }\n\n/**a와 b의 내용이 같은지 비교\r\n * 순서가 달라도 다른 내용으로 인식\r\n * \r\n * @param a 비교 대상 a\r\n * @param b 비교 대상 b\r\n */\n\nexport var isEqual = function isEqual(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n/** undefined, null, NaN 구분\r\n * \r\n * @param target 타겟\r\n */\n// export const isUndeclared = (target:any):boolean =>\n//   (\n//     target === null || target === undefined \n//     || (typeof target === NUMBER && isNaN(target)) \n//   );\n\nexport var isUndeclared = function isUndeclared(target) {\n  return target === null || target === undefined || typeof target === NUMBER && isNaN(target);\n}; // export const isNaN = (target:any):boolean => \n//   target === NaN;\n\n/**숫자 포맷 구분\r\n * \r\n * @param target \r\n */\n\nexport var isNumberForm = function isNumberForm(target) {\n  return typeof target === STRING ? NUMBER_FORM.test(target) : Number(target) === target;\n}; // Number(num) === num;\n\nexport var isString = function isString(target) {\n  return typeof target === STRING;\n};\n/*\r\nexport const pick = <T, K extends keyof T, F>(\r\n    object: T, \r\n    keys: Array<K>, \r\n    filter:(key: K, val:T[K]) => F|T[K] =  (_key, val) => val\r\n  // ): Pick<T, K> | undefined =>{\r\n  ): Record<K, F|T[K]> | undefined =>{\r\n// export const pick = <T, K extends keyof T, F>(object: T, keys: Array<K>, filter?:(key: K, val:T[K]) => F): Pick<T, K>|Record<K, F> | undefined =>{\r\n  const obj:Record<K, F|T[K]>|any = {}; \r\n  const fail = keys.some(key => {\r\n    let val:T[K]|F = object[key] ;\r\n    if( isUndeclared(val) ) return true;\r\n    val = filter? filter(key, val) as F : val;\r\n    if( isUndeclared(val) ) return true;\r\n    obj[key] = val;\r\n  })\r\n\r\n  if(fail) return undefined;\r\n\r\n  return obj;\r\n}\r\n*/\n// export const isInteger = ( num:any ):boolean => \n//   isNumber(num) && num % 1 === 0;\n\nexport var isFloat = function isFloat(num) {\n  return isNumberForm(num) && Number(num) % 1 !== 0;\n};\nexport var numberWithHyphen = function numberWithHyphen(val) {\n  var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  if (!val) return def;\n  return val.replace(OTHER_THEN_NUMBER, '').replace(WITH_HYPHEN, '$1-$2-$3').replace(\"--\", \"-\");\n};\nexport var numberWithGlobalPhone = function numberWithGlobalPhone(val) {\n  var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  if (!val) return def;\n  return val.replace(OTHER_THEN_NUMBER, '').replace(WITH_GLOBAL_PHONE, '+$1)$2-$3-$4').replace(\"--\", \"-\");\n};\nexport var formatBirth = function formatBirth(val) {\n  var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  if (!val) return def;\n  return val.replace(OTHER_THEN_NUMBER, '').replace(WITH_BIRTH, '$1-$2-$3').replace(\"--\", \"-\");\n};\nexport var priceCreate = function priceCreate(val) {\n  var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (!val) return def;\n  var parseVal = parseInt(val.replace(OTHER_THEN_NUMBER, ''));\n\n  if (val.length > 1 && parseInt(val.slice(0, 1)) < 1) {\n    return parseInt(val.slice(1));\n  }\n\n  return isNaN(parseVal) ? 0 : parseVal;\n};\nexport var hideTextExclude = function hideTextExclude(_ref2) {\n  var text = _ref2.text,\n      _ref2$start = _ref2.start,\n      start = _ref2$start === void 0 ? 'left' : _ref2$start,\n      _ref2$padChar = _ref2.padChar,\n      padChar = _ref2$padChar === void 0 ? '_' : _ref2$padChar,\n      excludeLength = _ref2.excludeLength;\n\n  if (start === 'left') {\n    var lastNthText = text.substring(0, excludeLength);\n    return lastNthText.padEnd(Math.max(excludeLength, text.length), padChar);\n  } else {\n    var startNthText = text.slice(-excludeLength);\n    return startNthText.padStart(Math.max(excludeLength, text.length), padChar);\n  }\n};\nexport var parseDate = function parseDate(date) {\n  if (typeof date == 'string') {\n    var nums = date.split(/\\D/);\n    return new Date(nums[0] * 1, nums[1] - 1, nums[2] * 1, nums[3] * 1, nums[4] * 1, nums[5] * 1);\n  } else if (date instanceof Date) {\n    return date;\n  } else {\n    return undefined;\n  }\n};\nexport var timeOrDate = function timeOrDate(milliseconds) {\n  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!isNumberForm(milliseconds)) return '알수없음';\n  var d = moment(milliseconds).toDate(); // const d: Date|undefined = moment(date).;\n  // if(!d || d.getTime() === NaN)\n  //   return '알수없음';\n\n  var cur = new Date();\n  cur = new Date(cur.getFullYear(), cur.getMonth(), cur.getDate()); // let diff =  d.getTime() - cur.getTime();\n\n  var cur_time = cur.getTime();\n  var target_time = d.getTime();\n\n  if (cur_time < target_time && target_time > cur_time + ONE_DAY) {\n    var hour = '' + d.getHours(),\n        minutes = '' + d.getMinutes();\n    hour = hour.length == 1 ? '0' + hour : hour;\n    minutes = minutes.length == 1 ? '0' + minutes : minutes;\n    if (opt.timeSeparator) return \"\".concat(hour).concat(opt.timeSeparator).concat(minutes);else return \"\".concat(hour, \"\\uC2DC \").concat(minutes, \"\\uBD84\");\n  } else {\n    var year = d.getFullYear(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate();\n    month = month.length == 1 ? '0' + month : month;\n    day = day.length == 1 ? '0' + day : day;\n    if (opt.dateSeparator) return \"\".concat(year !== cur.getFullYear() ? \"\".concat(year).concat(opt.dateSeparator) : '').concat(month).concat(opt.dateSeparator).concat(day);else return \"\".concat(year !== cur.getFullYear() ? \"\".concat(year, \"\\uB144 \") : '').concat(month, \"\\uC6D4 \").concat(day, \"\\uC77C\");\n  } // return '';\n\n};\nexport var aboutDate = function aboutDate(milliseconds, opt) {\n  if (!isNumberForm(milliseconds)) return '알수없음';\n  var cur;\n  if (opt) cur = opt.cur;\n  if (!cur) cur = new Date();\n  var d = moment(milliseconds).toDate();\n  var d_long = d.getTime(),\n      cur_long = cur.getTime();\n  var diff = cur_long - d_long;\n\n  if (diff > 0) {\n    // 양수. 과거\n    if (opt === null || opt === void 0 ? void 0 : opt.under) return opt.under;\n\n    if (diff > ONE_YEAR) {\n      return \"\".concat(Math.floor(diff / ONE_YEAR), \"\\uB144 \\uC804\");\n    } else if (diff > ONE_MONTH) {\n      return \"\".concat(Math.floor(diff / ONE_MONTH), \"\\uB2EC \\uC804\");\n    } else if (diff > ONE_WEEK) {\n      return \"\".concat(Math.floor(diff / ONE_WEEK), \"\\uC8FC\\uC77C \\uC804\");\n    } else if (diff > ONE_DAY) {\n      return \"\".concat(Math.floor(diff / ONE_DAY), \"\\uC77C \\uC804\");\n    } else if (diff > ONE_HOUR) {\n      return \"\".concat(Math.floor(diff / ONE_HOUR), \"\\uC2DC\\uAC04 \\uC804\");\n    } else if (diff > ONE_MINUTE) {\n      return \"\".concat(Math.floor(diff / ONE_MINUTE), \"\\uBD84 \\uC804\");\n    } else {\n      return '방금전';\n    }\n  } else {\n    //음수. 미래\n    if (opt === null || opt === void 0 ? void 0 : opt.excess) return opt.excess;\n    diff = Math.abs(diff);\n\n    if (diff > ONE_YEAR) {\n      return \"\".concat(Math.floor(diff / ONE_YEAR), \"\\uB144 \\uD6C4\");\n    } else if (diff > ONE_MONTH) {\n      return \"\".concat(Math.floor(diff / ONE_MONTH), \"\\uB2EC \\uD6C4\");\n    } else if (diff > ONE_WEEK) {\n      return \"\".concat(Math.floor(diff / ONE_WEEK), \"\\uC8FC\\uC77C \\uD6C4\");\n    } else if (diff > ONE_DAY) {\n      return \"\".concat(Math.floor(diff / ONE_DAY), \"\\uC77C \\uD6C4\");\n    } else if (diff > ONE_HOUR) {\n      return \"\".concat(Math.floor(diff / ONE_HOUR), \"\\uC2DC\\uAC04 \\uD6C4\");\n    } else if (diff > ONE_MINUTE) {\n      return \"\".concat(Math.floor(diff / ONE_MINUTE), \"\\uBD84 \\uD6C4\");\n    } else {\n      return '잠시후';\n    }\n  }\n};\nexport var dataSizeParse = function dataSizeParse(size) {\n  var s = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'];\n  var e = Math.floor(Math.log(size) / Math.log(1024));\n  return (size / Math.pow(1024, e)).toFixed(2) + \" \" + s[e];\n};","map":{"version":3,"sources":["C:/pro/myReact/TeamPAJAMA/src/format.ts"],"names":["moment","SPECIAL_CHARACTERS","OTHER_THEN_NUMBER","OTHER_THEN_NUMBER_AND_RELATION","NUMBER_FORM","DIMENSION_FORM","EMAIL_FORM","INT_FORM","FLOAT_FORM","TAG_FORM","SPACE_BAR","WITH_COMMAS","WITH_HYPHEN","WITH_BIRTH","WITH_GLOBAL_PHONE","ONE_MINUTE","ONE_HOUR","ONE_DAY","ONE_WEEK","ONE_MONTH","ONE_YEAR","COMMA","EMPTY","STRING","NUMBER","numberWithCommas","target","def","toString","replace","limitNumberOpts","max","limitNumber","min","isNumberForm","stringNum","num","Number","isBlank","isUndeclared","isEqual","a","b","JSON","stringify","undefined","isNaN","test","isString","isFloat","numberWithHyphen","val","numberWithGlobalPhone","formatBirth","priceCreate","parseVal","parseInt","length","slice","hideTextExclude","text","start","padChar","excludeLength","lastNthText","substring","padEnd","Math","startNthText","padStart","parseDate","date","nums","split","Date","timeOrDate","milliseconds","opt","d","toDate","cur","getFullYear","getMonth","getDate","cur_time","getTime","target_time","hour","getHours","minutes","getMinutes","timeSeparator","year","month","day","dateSeparator","aboutDate","d_long","cur_long","diff","under","floor","excess","abs","dataSizeParse","size","s","e","log","pow","toFixed"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\n// export const NUMBER = /[0-9]/g;\r\nexport const SPECIAL_CHARACTERS = /[~!@\\#$%<>^&*\\|\\\\\\?\\/]/g;\r\nexport const OTHER_THEN_NUMBER = /\\D/g;\r\nexport const OTHER_THEN_NUMBER_AND_RELATION = /[^\\d\\.\\-\\+]/g;\r\nexport const NUMBER_FORM = /^[\\-\\+]?\\d*(\\.\\d+)?$/;\r\nexport const DIMENSION_FORM = /[\\-\\+]?\\d+(\\.\\d+)?\\s*[^\\n\\s\\b]*/g;\r\nexport const EMAIL_FORM = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\nexport const INT_FORM = /^\\d+$/;\r\nexport const FLOAT_FORM = /^\\d+\\.\\d+$/;\r\nexport const TAG_FORM = /\\<\\/?[a-z]+[^\\<\\>\\\\]*\\/?\\>/gi;\r\nexport const SPACE_BAR = /\\s/g;\r\n// export const NUMBER_FORM = /^[\\-\\+]?((\\d+\\.?)|(\\.?\\d+)|(\\d+\\.\\d+))$/;\r\nexport const WITH_COMMAS = /\\B(?=(\\d{3})+(?!\\d))/g;\r\nexport const WITH_HYPHEN=/(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})/;\r\nexport const WITH_BIRTH=/(^[1-2][0-9]{3}|^0[0-9]{3})([0-9]+)?([0-9]{2})/\r\nexport const WITH_GLOBAL_PHONE=/(^[0-9]{2,3}|^0[0-9]{2})|(^[0-9]{2,3}|)([0-9]+)?([0-9]{4})/\r\nconst ONE_MINUTE = 60 * 1000,\r\n  ONE_HOUR = ONE_MINUTE * 60,\r\n  ONE_DAY = ONE_HOUR * 24,\r\n  ONE_WEEK = ONE_DAY * 7,\r\n  ONE_MONTH = ONE_DAY * 30,\r\n  ONE_YEAR = ONE_DAY * 365;\r\n\r\nconst COMMA = ',';\r\nexport const EMPTY = '';\r\nexport const STRING = 'string';\r\n// const NAN = 'NaN';\r\nconst NUMBER = 'number';\r\n// const UNDEFINED = 'undefined';\r\n\r\n/** README!!!\r\n *  문자열 관련\r\n *  OUTPUT은 반드시 기본값이 들어갈것\r\n *  (undefind 또는 null이 OUTPUT으로 나오지 않도록)\r\n */\r\n\r\n\r\n /**금액 3자리수마다 콤마 찍기\r\n  * \r\n  * @param target : 문자열\r\n  * @param def : 기본 값\r\n  */\r\nexport const numberWithCommas = (target: string|number|undefined, def:number|string=EMPTY):string => {\r\n  if(!target) return def.toString();\r\n\r\n  return target.toString()\r\n    .replace(OTHER_THEN_NUMBER, EMPTY)\r\n    .replace(WITH_COMMAS, COMMA);\r\n\r\n}\r\n\r\ntype LimitNumberOptions ={\r\n  def: number|string;\r\n  max?: number;\r\n  min?: number;\r\n}\r\nconst limitNumberOpts:LimitNumberOptions = {\r\n  def: '',\r\n  max: 100\r\n}\r\n/** 입력 숫자 제한\r\n * \r\n * @param target 문자열\r\n * @param {\r\n *  def : 기본 값\r\n *  min : 최소 값\r\n *  max : 최대 값 \r\n * }\r\n */\r\nexport const limitNumber = (target: string | undefined,  {def=EMPTY, max=100, min}=limitNumberOpts):string => {\r\n  if(!target || !isNumberForm(target)) return def.toString();\r\n  const stringNum = target.replace(OTHER_THEN_NUMBER_AND_RELATION, EMPTY);\r\n  if(stringNum === EMPTY) return def.toString();\r\n  const num = Number(stringNum);\r\n  if(min && min > num)\r\n    return min.toString();\r\n  else if(max && max < num)\r\n    return max.toString();\r\n  else \r\n    return target\r\n}\r\n\r\n/** 빈 문자열 구분. tag는 전부 테스트에서 제외\r\n * \r\n * @param target : 문자열\r\n */\r\nexport const isBlank = (target:string|number):boolean =>{\r\n  return !isUndeclared(target) \r\n    && (\r\n      target === EMPTY \r\n      || (\r\n        typeof target === 'string'\r\n          && target.replace(TAG_FORM, EMPTY).replace(SPACE_BAR, EMPTY) === EMPTY\r\n      )\r\n    )\r\n}\r\n  \r\n// export const isString = (target: any): target is string => {\r\n//   return typeof target === STRING;\r\n// }\r\n/**a와 b의 내용이 같은지 비교\r\n * 순서가 달라도 다른 내용으로 인식\r\n * \r\n * @param a 비교 대상 a\r\n * @param b 비교 대상 b\r\n */\r\nexport const isEqual = (a:any, b:any) => \r\n  JSON.stringify(a) === JSON.stringify(b);\r\n\r\n/** undefined, null, NaN 구분\r\n * \r\n * @param target 타겟\r\n */\r\n// export const isUndeclared = (target:any):boolean =>\r\n//   (\r\n//     target === null || target === undefined \r\n//     || (typeof target === NUMBER && isNaN(target)) \r\n//   );\r\nexport const isUndeclared = (target:any): target is undefined | null | typeof NaN =>\r\n  (\r\n    target === null || target === undefined \r\n    || (typeof target === NUMBER && isNaN(target)) \r\n  );\r\n// export const isNaN = (target:any):boolean => \r\n//   target === NaN;\r\n\r\n/**숫자 포맷 구분\r\n * \r\n * @param target \r\n */\r\nexport const isNumberForm = ( target: any ) : target is number | string =>\r\n  typeof target === STRING \r\n    ? NUMBER_FORM.test(target)\r\n    : Number(target) === target;\r\n\r\n  // Number(num) === num;\r\nexport const isString = (target: any) : target is string => \r\n    typeof target === STRING;\r\n\r\n/*\r\nexport const pick = <T, K extends keyof T, F>(\r\n    object: T, \r\n    keys: Array<K>, \r\n    filter:(key: K, val:T[K]) => F|T[K] =  (_key, val) => val\r\n  // ): Pick<T, K> | undefined =>{\r\n  ): Record<K, F|T[K]> | undefined =>{\r\n// export const pick = <T, K extends keyof T, F>(object: T, keys: Array<K>, filter?:(key: K, val:T[K]) => F): Pick<T, K>|Record<K, F> | undefined =>{\r\n  const obj:Record<K, F|T[K]>|any = {}; \r\n  const fail = keys.some(key => {\r\n    let val:T[K]|F = object[key] ;\r\n    if( isUndeclared(val) ) return true;\r\n    val = filter? filter(key, val) as F : val;\r\n    if( isUndeclared(val) ) return true;\r\n    obj[key] = val;\r\n  })\r\n\r\n  if(fail) return undefined;\r\n\r\n  return obj;\r\n}\r\n*/\r\n\r\n\r\n// export const isInteger = ( num:any ):boolean => \r\n//   isNumber(num) && num % 1 === 0;\r\nexport const isFloat = ( num:any ):boolean => \r\n  isNumberForm(num) && Number(num) % 1 !== 0;\r\n\r\nexport const numberWithHyphen =(val:string | undefined,def=''):string=>{\r\n  if(!val) return def;\r\n  return val.replace(OTHER_THEN_NUMBER,'').replace(WITH_HYPHEN,'$1-$2-$3').replace(\"--\", \"-\");\r\n}\r\n\r\nexport const numberWithGlobalPhone =(val:string | undefined,def=''):string=>{\r\n  if(!val) return def;\r\n  return val.replace(OTHER_THEN_NUMBER,'').replace(WITH_GLOBAL_PHONE,'+$1)$2-$3-$4').replace(\"--\", \"-\");\r\n}\r\n\r\nexport const formatBirth =(val:string | undefined,def=''):string=>{\r\n  if(!val) return def;\r\n  return val.replace(OTHER_THEN_NUMBER,'').replace(WITH_BIRTH,'$1-$2-$3').replace(\"--\", \"-\");\r\n}\r\n\r\n\r\nexport const priceCreate =(val:string | undefined,def=0):number=>{\r\n  if(!val) return def;\r\n  const parseVal:number =parseInt(val.replace(OTHER_THEN_NUMBER,''));\r\n  if(val.length>1&&parseInt(val.slice(0,1))<1){\r\n    return parseInt(val.slice(1));\r\n  }\r\n  return isNaN(parseVal)?0:parseVal;\r\n    \r\n}\r\n\r\ntype PadTextProps = {\r\n  text: string,\r\n  start?: 'left'|'right',\r\n  padChar?: string,\r\n  excludeLength: number\r\n}\r\nexport const hideTextExclude = ({\r\n  text,\r\n  start='left',\r\n  padChar='_',\r\n  excludeLength\r\n}:PadTextProps):string => {\r\n\r\n  if(start === 'left'){\r\n    const lastNthText = text.substring(0, excludeLength);\r\n    return lastNthText.padEnd( Math.max(excludeLength, text.length) , padChar);\r\n  }else{\r\n    const startNthText = text.slice(-excludeLength);\r\n    return startNthText.padStart( Math.max(excludeLength, text.length), padChar);\r\n  }\r\n\r\n}\r\n\r\nexport const parseDate = (date:string|Date): Date|undefined =>{\r\n  if(typeof date == 'string'){\r\n    const nums:any = date.split(/\\D/);\r\n    return new Date( nums[0]*1, nums[1]-1, nums[2]*1, nums[3]*1, nums[4]*1, nums[5]*1 )\r\n  }else if( date instanceof Date){\r\n    return date\r\n  }else{\r\n    return undefined;\r\n  }\r\n}\r\n\r\ntype TimeOrDateOption = {\r\n  timeSeparator?: string,\r\n  dateSeparator?: string\r\n}\r\nexport const timeOrDate = (milliseconds:string|number, opt:TimeOrDateOption={}):string => {\r\n  if(!isNumberForm(milliseconds)) return '알수없음';\r\n  const d = moment(milliseconds).toDate();\r\n  // const d: Date|undefined = moment(date).;\r\n  // if(!d || d.getTime() === NaN)\r\n  //   return '알수없음';\r\n\r\n  let cur = new Date();\r\n  cur = new Date(cur.getFullYear(), cur.getMonth(), cur.getDate());\r\n\r\n  // let diff =  d.getTime() - cur.getTime();\r\n  const cur_time = cur.getTime();\r\n  const target_time = d.getTime();\r\n\r\n  if(cur_time < target_time && target_time > (cur_time+ONE_DAY) ){\r\n    let hour = '' + d.getHours(),\r\n    minutes = '' + d.getMinutes();\r\n    hour = hour.length == 1 ? '0' + hour : hour;\r\n    minutes = minutes.length == 1 ? '0' + minutes : minutes\r\n    if(opt.timeSeparator)  \r\n      return `${hour}${opt.timeSeparator}${minutes}`;\r\n    else\r\n      return `${hour}시 ${minutes}분`;\r\n  }else{\r\n    let year = d.getFullYear(),\r\n    month = '' + (d.getMonth() + 1),\r\n    day =  '' + d.getDate();\r\n\r\n    month = month.length == 1 ? '0' + month : month;\r\n    day = day.length == 1 ? '0' + day : day;\r\n    if(opt.dateSeparator)\r\n      return `${year !== cur.getFullYear() ? `${year}${opt.dateSeparator}` : ''}${month}${opt.dateSeparator}${day}`;\r\n    else\r\n      return `${year !== cur.getFullYear() ? `${year}년 ` : ''}${month}월 ${day}일` ;\r\n  }\r\n  // return '';\r\n  \r\n}\r\n\r\ntype aboutDate_opt ={\r\n  cur?: Date ,\r\n  excess?:string,\r\n  under?:string\r\n}\r\nexport const aboutDate = (milliseconds:string|number, opt:aboutDate_opt|undefined ): string => {\r\n  if(!isNumberForm(milliseconds)) return '알수없음';\r\n  \r\n  let cur;\r\n  if(opt)\r\n    cur = opt.cur;\r\n  if(!cur) cur = new Date();\r\n\r\n\r\n  const d = moment(milliseconds).toDate();\r\n\r\n  const d_long = d.getTime(),\r\n  cur_long = cur.getTime();\r\n\r\n  let diff = cur_long - d_long;\r\n\r\n  if(diff > 0){ // 양수. 과거\r\n    if(opt?.under) return opt.under;\r\n\r\n    if(diff > ONE_YEAR){\r\n      return `${Math.floor(diff / ONE_YEAR)}년 전`\r\n    }else if(diff > ONE_MONTH){\r\n      return `${Math.floor(diff / ONE_MONTH)}달 전`\r\n    }else if(diff > ONE_WEEK){\r\n      return `${Math.floor(diff / ONE_WEEK)}주일 전`\r\n    }else if(diff > ONE_DAY){\r\n      return `${Math.floor(diff / ONE_DAY)}일 전`\r\n    }else if(diff > ONE_HOUR){\r\n      return `${Math.floor(diff / ONE_HOUR)}시간 전`\r\n    }else if(diff > ONE_MINUTE){\r\n      return `${Math.floor(diff / ONE_MINUTE)}분 전`\r\n    }else {\r\n      return '방금전'\r\n    }\r\n  }else{  //음수. 미래\r\n    if(opt?.excess) return opt.excess;\r\n\r\n    diff = Math.abs(diff);\r\n    if(diff > ONE_YEAR){\r\n      return `${Math.floor(diff / ONE_YEAR)}년 후`\r\n    }else if(diff > ONE_MONTH){\r\n      return `${Math.floor(diff / ONE_MONTH)}달 후`\r\n    }else if(diff > ONE_WEEK){\r\n      return `${Math.floor(diff / ONE_WEEK)}주일 후`\r\n    }else if(diff > ONE_DAY){\r\n      return `${Math.floor(diff / ONE_DAY)}일 후`\r\n    }else if(diff > ONE_HOUR){\r\n      return `${Math.floor(diff / ONE_HOUR)}시간 후`\r\n    }else if(diff > ONE_MINUTE){\r\n      return `${Math.floor(diff / ONE_MINUTE)}분 후`\r\n    }else {\r\n      return '잠시후'\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const dataSizeParse=(size:number)=>{\r\n  const s = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'];\r\n  const e = Math.floor(Math.log(size) / Math.log(1024));\r\n  return (size / Math.pow(1024, e)).toFixed(2) + \" \" + s[e];\r\n}"]},"metadata":{},"sourceType":"module"}