{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { destroyCookie, parseCookies, setCookie } from \"nookies\";\nimport { pick } from \"./util\";\nexport const pushAsCurrentPage = (urlOption, router) => {\n  // const router_ = router||useRouter();\n  const {\n    query,\n    pathname\n  } = router;\n  router.push(urlOption, {\n    pathname,\n    query\n  });\n};\nexport const saveCurrentPage = router => {\n  const {\n    pathname,\n    query\n  } = router;\n\n  const {\n    dialogType\n  } = query,\n        query_ = _objectWithoutProperties(query, [\"dialogType\"]);\n\n  setCookie(null, `${process.env.NEXT_PUBLIC_BOOKMARK_PAGE}`, JSON.stringify({\n    pathname,\n    query: query_\n  }), {\n    path: '/'\n  });\n};\nexport const getBookmarkPage = () => {\n  const cookies = parseCookies();\n\n  try {\n    const bookmarkPage = pick(JSON.parse(cookies[`${process.env.NEXT_PUBLIC_BOOKMARK_PAGE}`]));\n    return bookmarkPage;\n  } catch (_) {\n    return undefined;\n  }\n};\nexport const removeBookmarpage = () => destroyCookie(null, `${process.env.NEXT_PUBLIC_BOOKMARK_PAGE}`);","map":null,"metadata":{},"sourceType":"module"}