{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"width\", \"aspectRatio\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\pro\\\\myReact\\\\TeamPAJAMA\\\\components\\\\shape\\\\aspectRatioBox.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\"; // import TourchRipple from '@material-ui/core/ButtonBase/TouchRipple';\n\nimport clsx from \"clsx\";\nvar useAspectRatioBoxStyles = makeStyles(function (_theme) {\n  return {\n    box: {\n      overflow: 'hidden'\n    }\n  };\n});\n\nvar AspectRatioBox = function AspectRatioBox(_ref) {\n  _s();\n\n  var children = _ref.children,\n      className = _ref.className,\n      width = _ref.width,\n      aspectRatio = _ref.aspectRatio,\n      boxProps = _objectWithoutProperties(_ref, _excluded);\n\n  var classes = useAspectRatioBoxStyles();\n  var boxClass = clsx(classes.box, className);\n\n  var _useState = useState({}),\n      divStyle = _useState[0],\n      setDivStyle = _useState[1];\n\n  useEffect(function () {\n    // if(!boxRef.current) return;\n    // const {offsetWidth} = boxRef.current\n    setDivStyle({\n      display: 'block',\n      paddingTop: \"\".concat(aspectRatio * 100, \"%\")\n    });\n  }, [aspectRatio, width]);\n  return __jsx(Box, _extends({}, boxProps, {\n    className: boxClass,\n    width: width,\n    position: \"relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: divStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, children));\n};\n\n_s(AspectRatioBox, \"Y2AjMfrjWYN1rGnqXAShHlSLep8=\", false, function () {\n  return [useAspectRatioBoxStyles];\n});\n\n_c = AspectRatioBox;\nexport default AspectRatioBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"AspectRatioBox\");","map":{"version":3,"sources":["C:/pro/myReact/TeamPAJAMA/components/shape/aspectRatioBox.tsx"],"names":["useEffect","useState","Box","makeStyles","clsx","useAspectRatioBoxStyles","_theme","box","overflow","AspectRatioBox","children","className","width","aspectRatio","boxProps","classes","boxClass","divStyle","setDivStyle","display","paddingTop"],"mappings":";;;;;;;;;;AAAA,SAA4BA,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,SAASC,GAAT,EAAwBC,UAAxB,QAA0C,mBAA1C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAQA,IAAMC,uBAAuB,GAAGF,UAAU,CAAC,UAAAG,MAAM;AAAA,SAAK;AACpDC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAD+C,GAAL;AAAA,CAAP,CAA1C;;AAGA,IAAMC,cAAsC,GAAG,SAAzCA,cAAyC,OAA4D;AAAA;;AAAA,MAA1DC,QAA0D,QAA1DA,QAA0D;AAAA,MAAhDC,SAAgD,QAAhDA,SAAgD;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,WAA8B,QAA9BA,WAA8B;AAAA,MAAdC,QAAc;;AACzG,MAAMC,OAAO,GAAGV,uBAAuB,EAAvC;AACA,MAAMW,QAAQ,GAAGZ,IAAI,CAACW,OAAO,CAACR,GAAT,EAAcI,SAAd,CAArB;;AACA,kBAAgCV,QAAQ,CAAgB,EAAhB,CAAxC;AAAA,MAAOgB,QAAP;AAAA,MAAiBC,WAAjB;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACAkB,IAAAA,WAAW,CAAC;AACVC,MAAAA,OAAO,EAAE,OADC;AAEVC,MAAAA,UAAU,YAAKP,WAAW,GAAG,GAAnB;AAFA,KAAD,CAAX;AAKD,GARQ,EAQN,CAACA,WAAD,EAAcD,KAAd,CARM,CAAT;AASA,SACE,MAAC,GAAD,eAASE,QAAT;AACE,IAAA,SAAS,EAAEE,QADb;AAEE,IAAA,KAAK,EAAEJ,KAFT;AAGE,IAAA,QAAQ,EAAC,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE;AAAK,IAAA,KAAK,EAAEK,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AACE,IAAA,GAAG,EAAE,CADP;AACU,IAAA,IAAI,EAAE,CADhB;AACmB,IAAA,MAAM,EAAE,CAD3B;AAC8B,IAAA,KAAK,EAAE,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGP,QAHH,CANF,CADF;AAcD,CA5BD;;GAAMD,c;UACYJ,uB;;;KADZI,c;AA8BN,eAAeA,cAAf","sourcesContent":["import { CSSProperties, FC, useEffect, useState} from \"react\";\r\nimport { Box, BoxProps, makeStyles } from \"@material-ui/core\";\r\n// import TourchRipple from '@material-ui/core/ButtonBase/TouchRipple';\r\nimport clsx from \"clsx\";\r\n\r\n\r\ninterface AspectRatioBoxProps extends Omit<BoxProps, 'width'|'position'> {\r\n  width: any;\r\n  aspectRatio: number;\r\n  // refresh?: number;\r\n}\r\nconst useAspectRatioBoxStyles = makeStyles(_theme => ({\r\n  box: { overflow: 'hidden' }\r\n}))\r\nconst AspectRatioBox:FC<AspectRatioBoxProps> = ({children, className, width, aspectRatio, ...boxProps}) => {\r\n  const classes = useAspectRatioBoxStyles();\r\n  const boxClass = clsx(classes.box, className)\r\n  const [divStyle, setDivStyle] = useState<CSSProperties>({})\r\n\r\n  useEffect(() => {\r\n    // if(!boxRef.current) return;\r\n    // const {offsetWidth} = boxRef.current\r\n    setDivStyle({\r\n      display: 'block',\r\n      paddingTop: `${aspectRatio * 100}%`\r\n    });\r\n\r\n  }, [aspectRatio, width])\r\n  return (\r\n    <Box {...boxProps} \r\n      className={boxClass}\r\n      width={width}\r\n      position='relative'\r\n    >\r\n      <div style={divStyle}/>\r\n      <Box position=\"absolute\" \r\n        top={0} left={0} bottom={0} right={0}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AspectRatioBox;"]},"metadata":{},"sourceType":"module"}